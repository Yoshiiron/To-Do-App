{"ast":null,"code":"var _jsxFileName = \"/home/yoshiiron/code/first_try_with_react/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageFetcher() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [path, setPath] = useState('/api/message'); // путь по умолчанию\n\n  const fetchMessage = () => {\n    fetch(`http://localhost:8080${path}`).then(res => res.text()).then(message => {\n      setMessages(prev => [...prev, message]);\n    }).catch(err => {\n      setMessages(prev => [...prev, `Ошибка: ${err.message}`]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435 \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: path,\n      onChange: e => setPath(e.target.value),\n      placeholder: \"/api/message\",\n      style: {\n        marginRight: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMessage,\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageFetcher, \"Giv9rC/wEog8COlRpLRi/AuTklY=\");\n_c = MessageFetcher;\nexport default MessageFetcher;\nvar _c;\n$RefreshReg$(_c, \"MessageFetcher\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MessageFetcher","_s","messages","setMessages","path","setPath","fetchMessage","fetch","then","res","text","message","prev","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","marginRight","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/home/yoshiiron/code/first_try_with_react/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction MessageFetcher() {\n  const [messages, setMessages] = useState([]);\n  const [path, setPath] = useState('/api/message'); // путь по умолчанию\n\n  const fetchMessage = () => {\n    fetch(`http://localhost:8080${path}`)\n      .then(res => res.text())\n      .then(message => {\n        setMessages(prev => [...prev, message]);\n      })\n      .catch(err => {\n        setMessages(prev => [...prev, `Ошибка: ${err.message}`]);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Получить сообщение с сервера</h2>\n\n      <input\n        type=\"text\"\n        value={path}\n        onChange={(e) => setPath(e.target.value)}\n        placeholder=\"/api/message\"\n        style={{ marginRight: '8px' }}\n      />\n\n      <button onClick={fetchMessage}>Отправить запрос</button>\n\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>{msg}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MessageFetcher;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;;EAElD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,wBAAwBH,IAAI,EAAE,CAAC,CAClCI,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACfR,WAAW,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IACzC,CAAC,CAAC,CACDE,KAAK,CAACC,GAAG,IAAI;MACZX,WAAW,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,WAAWE,GAAG,CAACH,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAED,oBACEZ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErCpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEFpB,OAAA;MAAQ6B,OAAO,EAAEtB,YAAa;MAAAS,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExDpB,OAAA;MAAAgB,QAAA,EACGb,QAAQ,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBhC,OAAA;QAAAgB,QAAA,EAAiBe;MAAG,GAAXC,KAAK;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAClB,EAAA,CApCQD,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAsCvB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}